name: Code Coverage

on: [workflow_dispatch]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Tests
      uses: actions/checkout@v2
      with:
        path: Alpaca.Markets.Tests

    - name: Checkout Sources
      uses: actions/checkout@v2
      with:
        repository: alpacahq/alpaca-trade-api-csharp
        path: Alpaca.Markets

    - name: Setup .NET 6.0.x
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'

    - name: Restore .NET Tools
      run: dotnet tool restore
      working-directory: ./Alpaca.Markets.Tests

    - name: Restore NuGet Packages
      run: dotnet restore --force-evaluate
      working-directory: ./Alpaca.Markets.Tests/Alpaca.Markets.Coverage

    - name: Coverage All Tests
      env:
        PAPER_ALPACA_KEY_ID: ${{ secrets.PAPER_ALPACA_KEY_ID }}
        PAPER_ALPACA_SECRET_KEY: ${{ secrets.PAPER_ALPACA_SECRET_KEY }}
      run: dotnet dotcover test --dcXML=../Configuration.xml
      working-directory: ./Alpaca.Markets.Tests/Alpaca.Markets.Coverage

    - name: Save Report
      uses: actions/upload-artifact@v2
      with:
        name: coverage-report
        path: Alpaca.Markets.Tests/Alpaca.Markets.Coverage.xml

  publish:
    name: Publish Report
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout Sources
      uses: actions/checkout@v2
      with:
        repository: alpacahq/alpaca-trade-api-csharp
        path: Alpaca.Markets

    - id: get-sha
        run: echo "::set-output name=sha::$(git log -1 --format=%H)"
      working-directory: ./Alpaca.Markets

    - name: Load Report
      uses: actions/download-artifact@v2
      with:
        name: coverage-report
        path: Alpaca.Markets

    - name: Send to Codacy
      env:
        CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
      run: bash <(curl -Ls https://coverage.codacy.com/get.sh) report -r Alpaca.Markets.Coverage.xml --commit-uuid ${{ steps.get-sha.outputs.sha }}
      working-directory: ./Alpaca.Markets
